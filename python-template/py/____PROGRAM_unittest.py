#!/usr/bin/env ____PYTHON_VERSION
# Copyright (c) ____AUTHOR ____YEAR
# Autogenerated by ____GENERATOR_STRING

''' This is the python file that contains unittests and most code for ____PROGRAM '''

import unittest
from ____PROGRAM_lib import add, sub

class ____PROGRAMTest(unittest.TestCase):

    def setUp(self):
        # set stuff up here
        pass

    def tearDown(self):
        # tear stuff down here
        pass

    def testAddNumbers(self):
        # Note, you cannot test for exact equivalence for floating point numbers
        self.assertAlmostEqual(3, add(1,2))
        self.assertAlmostEqual(3.4387, add(1.4387,2))
        self.assertAlmostEqual(-1, add(-1,0))

    def testSubNumbers(self):
        # Note, you cannot test for exact equivalence for floating point numbers
        self.assertAlmostEqual(-1, sub(1,2))
        self.assertAlmostEqual(-0.5613, sub(1.4387,2))
        self.assertAlmostEqual(-1, sub(-1,0))
        pass

    def testBadTypes(self):
        ''' ensure that calling the functions with non-numbers results in a type error. '''
        bad_params = [
            (1,'a'),
            ('a', 1),
            ('aaa', 'aaa'),
            (lambda x:x, 1),
            (None, 1),
            (1, None),
            ({1,2,3}, {2,3,4}),
            ({1,2,3}, 54),
        ]
        for fcn in (add, sub):
            for params in bad_params:
                with self.assertRaises(TypeError):
                    fcn(*params)
            

if __name__ == '__main__':
    unittest.main()


